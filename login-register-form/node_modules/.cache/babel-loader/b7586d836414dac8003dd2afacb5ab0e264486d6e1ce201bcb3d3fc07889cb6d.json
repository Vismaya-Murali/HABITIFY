{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vismaya\\\\Desktop\\\\habit-tracker-final\\\\login-register-form\\\\src\\\\components\\\\todo\\\\todo.js\",\n  _s = $RefreshSig$();\n// TaskList.js\n\nimport React, { useState } from 'react';\nimport './to_do.css'; // Assuming you have a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const handleInputChange = event => {\n    setNewTask(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, {\n        text: newTask,\n        isCompleted: false\n      }]);\n      setNewTask('');\n    }\n  };\n  const handleDelete = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n  const handleEditToggle = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].isEditing = !updatedTasks[index].isEditing;\n    setTasks(updatedTasks);\n  };\n  const handleEditSave = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].isEditing = false;\n    setTasks(updatedTasks);\n  };\n  const handleCompletionToggle = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].isCompleted = !updatedTasks[index].isCompleted;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        id: \"new-task-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"new-task-input\",\n          id: \"new-task-input\",\n          placeholder: \"What do you have planned?\",\n          value: newTask,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"new-task-submit\",\n          value: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tasks\",\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"text\",\n                value: task.text,\n                readOnly: !task.isEditing,\n                style: {\n                  textDecoration: task.isCompleted ? 'line-through' : 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => handleEditToggle(index),\n                children: task.isEditing ? 'Save' : 'Edit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => handleDelete(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => handleDelete(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","handleInputChange","event","setNewTask","target","value","handleSubmit","preventDefault","newTask","trim","text","isCompleted","handleDelete","index","updatedTasks","splice","handleEditToggle","isEditing","handleEditSave","handleCompletionToggle","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","id","type","name","placeholder","onChange","className","map","task","readOnly","style","textDecoration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vismaya/Desktop/habit-tracker-final/login-register-form/src/components/todo/todo.js"],"sourcesContent":["// TaskList.js\r\n\r\nimport React, { useState } from 'react';\r\nimport './to_do.css'; // Assuming you have a CSS file for styling\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewTask(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newTask.trim() !== '') {\r\n      setTasks([...tasks, { text: newTask, isCompleted: false }]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks.splice(index, 1);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleEditToggle = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].isEditing = !updatedTasks[index].isEditing;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleEditSave = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].isEditing = false;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleCompletionToggle = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].isCompleted = !updatedTasks[index].isCompleted;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Task List</h1>\r\n        <form onSubmit={handleSubmit} id=\"new-task-form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"new-task-input\"\r\n            id=\"new-task-input\"\r\n            placeholder=\"What do you have planned?\"\r\n            value={newTask}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input type=\"submit\" id=\"new-task-submit\" value=\"Add task\" />\r\n        </form>\r\n      </header>\r\n      <main>\r\n        <section className=\"task-list\">\r\n          <h2>Tasks</h2>\r\n          <div id=\"tasks\">\r\n            {tasks.map((task, index) => (\r\n              <div key={index} className=\"task\">\r\n                <div className=\"content\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"text\"\r\n                    value={task.text}\r\n                    readOnly={!task.isEditing}\r\n                    style={{ textDecoration: task.isCompleted ? 'line-through' : 'none' }}\r\n                  />\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <button className=\"edit\" onClick={() => handleEditToggle(index)}>\r\n                    {task.isEditing ? 'Save' : 'Edit'}\r\n                  </button>\r\n                  <button className=\"delete\" onClick={() => handleDelete(index)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <button className=\"delete\" onClick={() => handleDelete(index)}>\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}