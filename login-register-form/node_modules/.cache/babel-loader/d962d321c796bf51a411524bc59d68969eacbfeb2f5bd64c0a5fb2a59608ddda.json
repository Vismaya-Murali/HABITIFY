{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vismaya\\\\Desktop\\\\habit-tracker-final\\\\login-register-form\\\\src\\\\components\\\\todo\\\\todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './to_do.css'; // Make sure to import your stylesheet\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const handleInputChange = e => {\n    setNewTask(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (newTask.trim() !== '') {\n      setTasks([...tasks, newTask]);\n      setNewTask('');\n    }\n  };\n  const handleEdit = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index] = newTask;\n    setTasks(updatedTasks);\n  };\n  const handleDelete = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n  const handleToggleComplete = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index] = {\n      task: tasks[index].task,\n      isCompleted: !tasks[index].isCompleted\n    };\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"new-task-input\",\n          placeholder: \"What do you have planned?\",\n          value: newTask,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tasks\",\n          children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"text\",\n                value: task.task,\n                readOnly: !task.isCompleted,\n                style: {\n                  textDecoration: task.isCompleted ? 'line-through' : 'none'\n                },\n                onChange: e => {\n                  const updatedTasks = [...tasks];\n                  updatedTasks[index] = {\n                    task: e.target.value,\n                    isCompleted: task.isCompleted\n                  };\n                  setTasks(updatedTasks);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => {\n                  if (!task.isCompleted) {\n                    handleEdit(index);\n                  }\n                },\n                children: task.isCompleted ? 'Completed' : 'Edit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => handleDelete(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"MMRu7H+sKP7rEuK8M8zT6HaT89w=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","newTask","setNewTask","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","handleEdit","index","updatedTasks","handleDelete","filter","_","i","handleToggleComplete","task","isCompleted","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","onChange","className","id","map","readOnly","style","textDecoration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vismaya/Desktop/habit-tracker-final/login-register-form/src/components/todo/todo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './to_do.css'; // Make sure to import your stylesheet\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewTask(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newTask.trim() !== '') {\r\n      setTasks([...tasks, newTask]);\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index] = newTask;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleDelete = (index) => {\r\n    const updatedTasks = tasks.filter((_, i) => i !== index);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleToggleComplete = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index] = {\r\n      task: tasks[index].task,\r\n      isCompleted: !tasks[index].isCompleted,\r\n    };\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>Task List</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"new-task-input\"\r\n            placeholder=\"What do you have planned?\"\r\n            value={newTask}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input type=\"submit\" value=\"Add task\" />\r\n        </form>\r\n      </header>\r\n      <main>\r\n        <section className=\"task-list\">\r\n          <h2>Tasks</h2>\r\n          <div id=\"tasks\">\r\n            {tasks.map((task, index) => (\r\n              <div key={index} className=\"task\">\r\n                <div className=\"content\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"text\"\r\n                    value={task.task}\r\n                    readOnly={!task.isCompleted}\r\n                    style={{\r\n                      textDecoration: task.isCompleted\r\n                        ? 'line-through'\r\n                        : 'none',\r\n                    }}\r\n                    onChange={(e) => {\r\n                      const updatedTasks = [...tasks];\r\n                      updatedTasks[index] = {\r\n                        task: e.target.value,\r\n                        isCompleted: task.isCompleted,\r\n                      };\r\n                      setTasks(updatedTasks);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <button\r\n                    className=\"edit\"\r\n                    onClick={() => {\r\n                      if (!task.isCompleted) {\r\n                        handleEdit(index);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {task.isCompleted ? 'Completed' : 'Edit'}\r\n                  </button>\r\n                  <button\r\n                    className=\"delete\"\r\n                    onClick={() => handleDelete(index)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}